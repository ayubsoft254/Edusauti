services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: web
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - sqlite_data:/app/data
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.production
    env_file:
      - .env.production
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build: .
    command: celery
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - sqlite_data:/app/data
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.production
    env_file:
      - .env.production
    depends_on:
      - redis
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery-beat
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - sqlite_data:/app/data
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.production
    env_file:
      - .env.production
    depends_on:
      - redis
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:
  sqlite_data:
