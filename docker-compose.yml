services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5    
      networks:
      - app-network

  web:
    build: .
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--worker-class", "uvicorn.workers.UvicornWorker", "core.asgi:application"]
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - sqlite_data:/app/data
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.production
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env.production    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app-network

  celery:
    build: .
    command: ["celery", "-A", "core", "worker", "--loglevel=info"]
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - sqlite_data:/app/data
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.production
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env.production
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app-network
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - app-network

volumes:
  static_volume:
  media_volume:
  sqlite_data:

networks:
  app-network:
    driver: bridge