# Generated by Django 5.2.1 on 2025-06-02 10:38

import django.core.validators
import django.db.models.deletion
import documents.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to=documents.models.document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'txt', 'pptx'])])),
                ('file_type', models.CharField(choices=[('pdf', 'PDF'), ('docx', 'Word Document'), ('txt', 'Text File'), ('pptx', 'PowerPoint')], max_length=10)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('original_filename', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('error', 'Error')], default='uploaded', max_length=20)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('extracted_text', models.TextField(blank=True)),
                ('text_extraction_confidence', models.FloatField(blank=True, null=True)),
                ('page_count', models.PositiveIntegerField(blank=True, null=True)),
                ('word_count', models.PositiveIntegerField(blank=True, null=True)),
                ('summary_text', models.TextField(blank=True)),
                ('summary_length', models.CharField(choices=[('short', 'Short (1-2 min)'), ('medium', 'Medium (3-5 min)'), ('long', 'Long (5+ min)')], default='medium', max_length=20)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('language', models.CharField(default='en-US', max_length=10)),
                ('subject_area', models.CharField(blank=True, max_length=100)),
                ('difficulty_level', models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('audio_play_count', models.PositiveIntegerField(default=0)),
                ('total_questions_asked', models.PositiveIntegerField(default=0)),
                ('average_session_duration', models.PositiveIntegerField(default=0, help_text='Average session time in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AudioSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_file', models.FileField(upload_to=documents.models.audio_upload_path)),
                ('audio_format', models.CharField(default='mp3', max_length=10)),
                ('audio_duration', models.PositiveIntegerField(help_text='Duration in seconds')),
                ('audio_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('voice_name', models.CharField(default='en-US-JennyNeural', max_length=50)),
                ('speech_rate', models.CharField(default='medium', max_length=20)),
                ('speech_pitch', models.CharField(default='medium', max_length=20)),
                ('status', models.CharField(choices=[('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed')], default='generating', max_length=20)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generation_time', models.PositiveIntegerField(blank=True, help_text='Generation time in seconds', null=True)),
                ('azure_request_id', models.CharField(blank=True, max_length=100)),
                ('azure_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audio_summaries', to='documents.document')),
            ],
            options={
                'verbose_name': 'Audio Summary',
                'verbose_name_plural': 'Audio Summaries',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.CharField(choices=[('upload', 'File Upload'), ('text_extraction', 'Text Extraction'), ('summarization', 'AI Summarization'), ('audio_generation', 'Audio Generation'), ('completion', 'Processing Complete')], max_length=20)),
                ('level', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error')], default='info', max_length=10)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_logs', to='documents.document')),
            ],
            options={
                'verbose_name': 'Processing Log',
                'verbose_name_plural': 'Processing Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('answer_text', models.TextField(blank=True)),
                ('audio_timestamp', models.PositiveIntegerField(blank=True, help_text='Timestamp in audio when question was asked', null=True)),
                ('context_snippet', models.TextField(blank=True, help_text='Relevant text snippet from document')),
                ('is_answered', models.BooleanField(default=False)),
                ('answer_confidence', models.FloatField(blank=True, null=True)),
                ('processing_time', models.PositiveIntegerField(blank=True, help_text='Time taken to answer in milliseconds', null=True)),
                ('user_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='User rating from 1 to 5', null=True)),
                ('user_feedback', models.TextField(blank=True)),
                ('azure_request_id', models.CharField(blank=True, max_length=100)),
                ('azure_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('asked_at', models.DateTimeField(auto_now_add=True)),
                ('answered_at', models.DateTimeField(blank=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='documents.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['-asked_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shared_with_email', models.EmailField(max_length=254)),
                ('can_view', models.BooleanField(default=True)),
                ('can_ask_questions', models.BooleanField(default=False)),
                ('can_download', models.BooleanField(default=False)),
                ('share_token', models.CharField(max_length=64, unique=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='documents.document')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Share',
                'verbose_name_plural': 'Document Shares',
                'unique_together': {('document', 'shared_with_email')},
            },
        ),
    ]
